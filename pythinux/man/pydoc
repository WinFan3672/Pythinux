Help on module pythinux:

NAME
    pythinux

CLASSES
    PyQt5.QtWidgets.QDialog(PyQt5.QtWidgets.QWidget)
        MessageBox
    builtins.Exception(builtins.BaseException)
        FileError
        PythinuxError
        SudoError
    builtins.object
        Base
            Group
            GroupList
            User
            UserList
        CurrentProgram
        Fuse
        LOGOFFEVENT
        rangedInt
    
    class Base(builtins.object)
     |  Base class used by all classes.
     |  This class is used as a base for other classes exclusively,
     |  and is not called directly.
     |  
     |  Methods defined here:
     |  
     |  __iter__(self)
     |      Iterating through a Base object iterates through the keys and not the
     |      values.
     |  
     |  __len__(self)
     |      Runing len() for a Base object returns the amount of attributes it has.
     |  
     |  __str__(self)
     |      Printing an object will return the object passed
     |      through pprint_dict(obj_to_dict()).
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors defined here:
     |  
     |  __weakref__
     |      list of weak references to the object (if defined)
    
    class CurrentProgram(builtins.object)
     |  CurrentProgram(name)
     |  
     |  Methods defined here:
     |  
     |  __init__(self, name)
     |      Initialize self.  See help(type(self)) for accurate signature.
     |  
     |  lock_class(self)
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors defined here:
     |  
     |  __dict__
     |      dictionary for instance variables (if defined)
     |  
     |  __weakref__
     |      list of weak references to the object (if defined)
     |  
     |  name
     |  
     |  ----------------------------------------------------------------------
     |  Data and other attributes defined here:
     |  
     |  __class__ = <class 'type'>
     |      type(object) -> the object's type
     |      type(name, bases, dict, **kwds) -> a new type
    
    class FileError(builtins.Exception)
     |  FileError(text)
     |  
     |  Generic exception for indicating an issue with opening or parsing a file.
     |  Args:
     |  text: what to display to the user.
     |  
     |  Method resolution order:
     |      FileError
     |      builtins.Exception
     |      builtins.BaseException
     |      builtins.object
     |  
     |  Methods defined here:
     |  
     |  __init__(self, text)
     |      Initialize self.  See help(type(self)) for accurate signature.
     |  
     |  write(self, text)
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors defined here:
     |  
     |  __weakref__
     |      list of weak references to the object (if defined)
     |  
     |  ----------------------------------------------------------------------
     |  Static methods inherited from builtins.Exception:
     |  
     |  __new__(*args, **kwargs) from builtins.type
     |      Create and return a new object.  See help(type) for accurate signature.
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from builtins.BaseException:
     |  
     |  __delattr__(self, name, /)
     |      Implement delattr(self, name).
     |  
     |  __getattribute__(self, name, /)
     |      Return getattr(self, name).
     |  
     |  __reduce__(...)
     |      Helper for pickle.
     |  
     |  __repr__(self, /)
     |      Return repr(self).
     |  
     |  __setattr__(self, name, value, /)
     |      Implement setattr(self, name, value).
     |  
     |  __setstate__(...)
     |  
     |  __str__(self, /)
     |      Return str(self).
     |  
     |  add_note(...)
     |      Exception.add_note(note) --
     |      add a note to the exception
     |  
     |  with_traceback(...)
     |      Exception.with_traceback(tb) --
     |      set self.__traceback__ to tb and return self.
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from builtins.BaseException:
     |  
     |  __cause__
     |      exception cause
     |  
     |  __context__
     |      exception context
     |  
     |  __dict__
     |  
     |  __suppress_context__
     |  
     |  __traceback__
     |  
     |  args
    
    class Fuse(builtins.object)
     |  Software equivalent of a fuse.
     |  Calling the blow() method will set the blown attribute from false to true.
     |  Once this is done, the class is designed to make it impossible to change
     |  back to False.
     |  
     |  Methods defined here:
     |  
     |  __init__(self)
     |      Initialize self.  See help(type(self)) for accurate signature.
     |  
     |  __str__(self)
     |      Return str(self).
     |  
     |  blow(self)
     |  
     |  ----------------------------------------------------------------------
     |  Class methods defined here:
     |  
     |  is_blown(fuse) from builtins.type
     |  
     |  ----------------------------------------------------------------------
     |  Static methods defined here:
     |  
     |  __new__(cls)
     |      Create and return a new object.  See help(type) for accurate signature.
     |  
     |  ----------------------------------------------------------------------
     |  Readonly properties defined here:
     |  
     |  blown
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors defined here:
     |  
     |  __dict__
     |      dictionary for instance variables (if defined)
     |  
     |  __weakref__
     |      list of weak references to the object (if defined)
    
    class Group(Base)
     |  Group(name, canApp=False, canAppHigh=False, canSys=False, canSysHigh=False, canSudo=False, locked=False)
     |  
     |  User groups with custom permissions.
     |  
     |  Method resolution order:
     |      Group
     |      Base
     |      builtins.object
     |  
     |  Methods defined here:
     |  
     |  __init__(self, name, canApp=False, canAppHigh=False, canSys=False, canSysHigh=False, canSudo=False, locked=False)
     |      Defines nanme and permissions of the Group.
     |      name: name of group. Set to all-lowercase.
     |      canApp: Boolean. Defines whether or not the user can access apps.
     |      canAppHigh: Boolean. Defines whether or not the user can access
     |          high-access apps.
     |      canSys: Boolean. Defines whether or not the user can access system
     |          apps in the "system" directory.
     |      canSysHigh: Boolean. Defines whether or not the user can access system
     |          apps in the "system_high" directory.
     |      canSudo: Boolean. Determines whether or not the user can use `sudo`.
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors defined here:
     |  
     |  __dict__
     |      dictionary for instance variables (if defined)
     |  
     |  ----------------------------------------------------------------------
     |  Data and other attributes defined here:
     |  
     |  __slotnames__ = []
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from Base:
     |  
     |  __iter__(self)
     |      Iterating through a Base object iterates through the keys and not the
     |      values.
     |  
     |  __len__(self)
     |      Runing len() for a Base object returns the amount of attributes it has.
     |  
     |  __str__(self)
     |      Printing an object will return the object passed
     |      through pprint_dict(obj_to_dict()).
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from Base:
     |  
     |  __weakref__
     |      list of weak references to the object (if defined)
    
    class GroupList(Base)
     |  GroupList class for use in saveGroupList()/loadGroupList().
     |  
     |  Method resolution order:
     |      GroupList
     |      Base
     |      builtins.object
     |  
     |  Methods defined here:
     |  
     |  __init__(self)
     |      Initialize self.  See help(type(self)) for accurate signature.
     |  
     |  __len__(self)
     |      Runing len() for a Base object returns the amount of attributes it has.
     |  
     |  add(self, group)
     |      Adds a group to the GroupList.
     |      Args:
     |      * group: a Group instance.
     |  
     |  byName(self, name)
     |      Returns the first instance of a group based on its name.
     |  
     |  list(self)
     |      Returns the list of groups.
     |  
     |  remove(self, group)
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors defined here:
     |  
     |  __dict__
     |      dictionary for instance variables (if defined)
     |  
     |  ----------------------------------------------------------------------
     |  Data and other attributes defined here:
     |  
     |  __slotnames__ = []
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from Base:
     |  
     |  __iter__(self)
     |      Iterating through a Base object iterates through the keys and not the
     |      values.
     |  
     |  __str__(self)
     |      Printing an object will return the object passed
     |      through pprint_dict(obj_to_dict()).
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from Base:
     |  
     |  __weakref__
     |      list of weak references to the object (if defined)
    
    class LOGOFFEVENT(builtins.object)
     |  This class(not an instance of it) is returned by main() when
     |  the user uses the "logoff" command.
     |  
     |  Data descriptors defined here:
     |  
     |  __dict__
     |      dictionary for instance variables (if defined)
     |  
     |  __weakref__
     |      list of weak references to the object (if defined)
    
    class MessageBox(PyQt5.QtWidgets.QDialog)
     |  MessageBox(title, message)
     |  
     |  Method resolution order:
     |      MessageBox
     |      PyQt5.QtWidgets.QDialog
     |      PyQt5.QtWidgets.QWidget
     |      PyQt5.QtCore.QObject
     |      sip.wrapper
     |      PyQt5.QtGui.QPaintDevice
     |      sip.simplewrapper
     |      builtins.object
     |  
     |  Methods defined here:
     |  
     |  __init__(self, title, message)
     |      Initialize self.  See help(type(self)) for accurate signature.
     |  
     |  initUI(self)
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from PyQt5.QtWidgets.QDialog:
     |  
     |  accept(...)
     |      accept(self)
     |  
     |  accepted = <unbound PYQT_SIGNAL accepted()>
     |  closeEvent(...)
     |      closeEvent(self, a0: QCloseEvent)
     |  
     |  contextMenuEvent(...)
     |      contextMenuEvent(self, a0: QContextMenuEvent)
     |  
     |  done(...)
     |      done(self, a0: int)
     |  
     |  eventFilter(...)
     |      eventFilter(self, a0: QObject, a1: QEvent) -> bool
     |  
     |  exec(...)
     |      exec(self) -> int
     |  
     |  exec_(...)
     |      exec_(self) -> int
     |  
     |  finished = <unbound PYQT_SIGNAL finished(int)>
     |  isSizeGripEnabled(...)
     |      isSizeGripEnabled(self) -> bool
     |  
     |  keyPressEvent(...)
     |      keyPressEvent(self, a0: QKeyEvent)
     |  
     |  minimumSizeHint(...)
     |      minimumSizeHint(self) -> QSize
     |  
     |  open(...)
     |      open(self)
     |  
     |  reject(...)
     |      reject(self)
     |  
     |  rejected = <unbound PYQT_SIGNAL rejected()>
     |  resizeEvent(...)
     |      resizeEvent(self, a0: QResizeEvent)
     |  
     |  result(...)
     |      result(self) -> int
     |  
     |  setModal(...)
     |      setModal(self, modal: bool)
     |  
     |  setResult(...)
     |      setResult(self, r: int)
     |  
     |  setSizeGripEnabled(...)
     |      setSizeGripEnabled(self, a0: bool)
     |  
     |  setVisible(...)
     |      setVisible(self, visible: bool)
     |  
     |  showEvent(...)
     |      showEvent(self, a0: QShowEvent)
     |  
     |  sizeHint(...)
     |      sizeHint(self) -> QSize
     |  
     |  ----------------------------------------------------------------------
     |  Data and other attributes inherited from PyQt5.QtWidgets.QDialog:
     |  
     |  Accepted = 1
     |  
     |  DialogCode = <class 'PyQt5.QtWidgets.QDialog.DialogCode'>
     |  
     |  Rejected = 0
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from PyQt5.QtWidgets.QWidget:
     |  
     |  acceptDrops(...)
     |      acceptDrops(self) -> bool
     |  
     |  accessibleDescription(...)
     |      accessibleDescription(self) -> str
     |  
     |  accessibleName(...)
     |      accessibleName(self) -> str
     |  
     |  actionEvent(...)
     |      actionEvent(self, a0: QActionEvent)
     |  
     |  actions(...)
     |      actions(self) -> List[QAction]
     |  
     |  activateWindow(...)
     |      activateWindow(self)
     |  
     |  addAction(...)
     |      addAction(self, action: QAction)
     |  
     |  addActions(...)
     |      addActions(self, actions: Iterable[QAction])
     |  
     |  adjustSize(...)
     |      adjustSize(self)
     |  
     |  autoFillBackground(...)
     |      autoFillBackground(self) -> bool
     |  
     |  backgroundRole(...)
     |      backgroundRole(self) -> QPalette.ColorRole
     |  
     |  baseSize(...)
     |      baseSize(self) -> QSize
     |  
     |  changeEvent(...)
     |      changeEvent(self, a0: QEvent)
     |  
     |  childAt(...)
     |      childAt(self, p: QPoint) -> QWidget
     |      childAt(self, ax: int, ay: int) -> QWidget
     |  
     |  childrenRect(...)
     |      childrenRect(self) -> QRect
     |  
     |  childrenRegion(...)
     |      childrenRegion(self) -> QRegion
     |  
     |  clearFocus(...)
     |      clearFocus(self)
     |  
     |  clearMask(...)
     |      clearMask(self)
     |  
     |  close(...)
     |      close(self) -> bool
     |  
     |  contentsMargins(...)
     |      contentsMargins(self) -> QMargins
     |  
     |  contentsRect(...)
     |      contentsRect(self) -> QRect
     |  
     |  contextMenuPolicy(...)
     |      contextMenuPolicy(self) -> Qt.ContextMenuPolicy
     |  
     |  create(...)
     |      create(self, window: PyQt5.sip.voidptr = 0, initializeWindow: bool = True, destroyOldWindow: bool = True)
     |  
     |  createWindowContainer(...)
     |      createWindowContainer(window: QWindow, parent: typing.Optional[QWidget] = None, flags: Union[Qt.WindowFlags, Qt.WindowType] = 0) -> QWidget
     |  
     |  cursor(...)
     |      cursor(self) -> QCursor
     |  
     |  customContextMenuRequested = <unbound PYQT_SIGNAL customContextMenuRequested(QPoint)>
     |  destroy(...)
     |      destroy(self, destroyWindow: bool = True, destroySubWindows: bool = True)
     |  
     |  devType(...)
     |      devType(self) -> int
     |  
     |  dragEnterEvent(...)
     |      dragEnterEvent(self, a0: QDragEnterEvent)
     |  
     |  dragLeaveEvent(...)
     |      dragLeaveEvent(self, a0: QDragLeaveEvent)
     |  
     |  dragMoveEvent(...)
     |      dragMoveEvent(self, a0: QDragMoveEvent)
     |  
     |  dropEvent(...)
     |      dropEvent(self, a0: QDropEvent)
     |  
     |  effectiveWinId(...)
     |      effectiveWinId(self) -> PyQt5.sip.voidptr
     |  
     |  ensurePolished(...)
     |      ensurePolished(self)
     |  
     |  enterEvent(...)
     |      enterEvent(self, a0: QEvent)
     |  
     |  event(...)
     |      event(self, a0: QEvent) -> bool
     |  
     |  find(...)
     |      find(a0: PyQt5.sip.voidptr) -> QWidget
     |  
     |  focusInEvent(...)
     |      focusInEvent(self, a0: QFocusEvent)
     |  
     |  focusNextChild(...)
     |      focusNextChild(self) -> bool
     |  
     |  focusNextPrevChild(...)
     |      focusNextPrevChild(self, next: bool) -> bool
     |  
     |  focusOutEvent(...)
     |      focusOutEvent(self, a0: QFocusEvent)
     |  
     |  focusPolicy(...)
     |      focusPolicy(self) -> Qt.FocusPolicy
     |  
     |  focusPreviousChild(...)
     |      focusPreviousChild(self) -> bool
     |  
     |  focusProxy(...)
     |      focusProxy(self) -> QWidget
     |  
     |  focusWidget(...)
     |      focusWidget(self) -> QWidget
     |  
     |  font(...)
     |      font(self) -> QFont
     |  
     |  fontInfo(...)
     |      fontInfo(self) -> QFontInfo
     |  
     |  fontMetrics(...)
     |      fontMetrics(self) -> QFontMetrics
     |  
     |  foregroundRole(...)
     |      foregroundRole(self) -> QPalette.ColorRole
     |  
     |  frameGeometry(...)
     |      frameGeometry(self) -> QRect
     |  
     |  frameSize(...)
     |      frameSize(self) -> QSize
     |  
     |  geometry(...)
     |      geometry(self) -> QRect
     |  
     |  getContentsMargins(...)
     |      getContentsMargins(self) -> Tuple[int, int, int, int]
     |  
     |  grab(...)
     |      grab(self, rectangle: QRect = QRect(QPoint(0,0),QSize(-1,-1))) -> QPixmap
     |  
     |  grabGesture(...)
     |      grabGesture(self, type: Qt.GestureType, flags: Union[Qt.GestureFlags, Qt.GestureFlag] = Qt.GestureFlags())
     |  
     |  grabKeyboard(...)
     |      grabKeyboard(self)
     |  
     |  grabMouse(...)
     |      grabMouse(self)
     |      grabMouse(self, a0: Union[QCursor, Qt.CursorShape])
     |  
     |  grabShortcut(...)
     |      grabShortcut(self, key: Union[QKeySequence, QKeySequence.StandardKey, str, int], context: Qt.ShortcutContext = Qt.WindowShortcut) -> int
     |  
     |  graphicsEffect(...)
     |      graphicsEffect(self) -> QGraphicsEffect
     |  
     |  graphicsProxyWidget(...)
     |      graphicsProxyWidget(self) -> QGraphicsProxyWidget
     |  
     |  hasFocus(...)
     |      hasFocus(self) -> bool
     |  
     |  hasHeightForWidth(...)
     |      hasHeightForWidth(self) -> bool
     |  
     |  hasMouseTracking(...)
     |      hasMouseTracking(self) -> bool
     |  
     |  hasTabletTracking(...)
     |      hasTabletTracking(self) -> bool
     |  
     |  height(...)
     |      height(self) -> int
     |  
     |  heightForWidth(...)
     |      heightForWidth(self, a0: int) -> int
     |  
     |  hide(...)
     |      hide(self)
     |  
     |  hideEvent(...)
     |      hideEvent(self, a0: QHideEvent)
     |  
     |  initPainter(...)
     |      initPainter(self, painter: QPainter)
     |  
     |  inputMethodEvent(...)
     |      inputMethodEvent(self, a0: QInputMethodEvent)
     |  
     |  inputMethodHints(...)
     |      inputMethodHints(self) -> Qt.InputMethodHints
     |  
     |  inputMethodQuery(...)
     |      inputMethodQuery(self, a0: Qt.InputMethodQuery) -> Any
     |  
     |  insertAction(...)
     |      insertAction(self, before: QAction, action: QAction)
     |  
     |  insertActions(...)
     |      insertActions(self, before: QAction, actions: Iterable[QAction])
     |  
     |  isActiveWindow(...)
     |      isActiveWindow(self) -> bool
     |  
     |  isAncestorOf(...)
     |      isAncestorOf(self, child: QWidget) -> bool
     |  
     |  isEnabled(...)
     |      isEnabled(self) -> bool
     |  
     |  isEnabledTo(...)
     |      isEnabledTo(self, a0: QWidget) -> bool
     |  
     |  isFullScreen(...)
     |      isFullScreen(self) -> bool
     |  
     |  isHidden(...)
     |      isHidden(self) -> bool
     |  
     |  isLeftToRight(...)
     |      isLeftToRight(self) -> bool
     |  
     |  isMaximized(...)
     |      isMaximized(self) -> bool
     |  
     |  isMinimized(...)
     |      isMinimized(self) -> bool
     |  
     |  isModal(...)
     |      isModal(self) -> bool
     |  
     |  isRightToLeft(...)
     |      isRightToLeft(self) -> bool
     |  
     |  isVisible(...)
     |      isVisible(self) -> bool
     |  
     |  isVisibleTo(...)
     |      isVisibleTo(self, a0: QWidget) -> bool
     |  
     |  isWindow(...)
     |      isWindow(self) -> bool
     |  
     |  isWindowModified(...)
     |      isWindowModified(self) -> bool
     |  
     |  keyReleaseEvent(...)
     |      keyReleaseEvent(self, a0: QKeyEvent)
     |  
     |  keyboardGrabber(...)
     |      keyboardGrabber() -> QWidget
     |  
     |  layout(...)
     |      layout(self) -> QLayout
     |  
     |  layoutDirection(...)
     |      layoutDirection(self) -> Qt.LayoutDirection
     |  
     |  leaveEvent(...)
     |      leaveEvent(self, a0: QEvent)
     |  
     |  locale(...)
     |      locale(self) -> QLocale
     |  
     |  lower(...)
     |      lower(self)
     |  
     |  mapFrom(...)
     |      mapFrom(self, a0: QWidget, a1: QPoint) -> QPoint
     |  
     |  mapFromGlobal(...)
     |      mapFromGlobal(self, a0: QPoint) -> QPoint
     |  
     |  mapFromParent(...)
     |      mapFromParent(self, a0: QPoint) -> QPoint
     |  
     |  mapTo(...)
     |      mapTo(self, a0: QWidget, a1: QPoint) -> QPoint
     |  
     |  mapToGlobal(...)
     |      mapToGlobal(self, a0: QPoint) -> QPoint
     |  
     |  mapToParent(...)
     |      mapToParent(self, a0: QPoint) -> QPoint
     |  
     |  mask(...)
     |      mask(self) -> QRegion
     |  
     |  maximumHeight(...)
     |      maximumHeight(self) -> int
     |  
     |  maximumSize(...)
     |      maximumSize(self) -> QSize
     |  
     |  maximumWidth(...)
     |      maximumWidth(self) -> int
     |  
     |  metric(...)
     |      metric(self, a0: QPaintDevice.PaintDeviceMetric) -> int
     |  
     |  minimumHeight(...)
     |      minimumHeight(self) -> int
     |  
     |  minimumSize(...)
     |      minimumSize(self) -> QSize
     |  
     |  minimumWidth(...)
     |      minimumWidth(self) -> int
     |  
     |  mouseDoubleClickEvent(...)
     |      mouseDoubleClickEvent(self, a0: QMouseEvent)
     |  
     |  mouseGrabber(...)
     |      mouseGrabber() -> QWidget
     |  
     |  mouseMoveEvent(...)
     |      mouseMoveEvent(self, a0: QMouseEvent)
     |  
     |  mousePressEvent(...)
     |      mousePressEvent(self, a0: QMouseEvent)
     |  
     |  mouseReleaseEvent(...)
     |      mouseReleaseEvent(self, a0: QMouseEvent)
     |  
     |  move(...)
     |      move(self, a0: QPoint)
     |      move(self, ax: int, ay: int)
     |  
     |  moveEvent(...)
     |      moveEvent(self, a0: QMoveEvent)
     |  
     |  nativeEvent(...)
     |      nativeEvent(self, eventType: Union[QByteArray, bytes, bytearray], message: PyQt5.sip.voidptr) -> Tuple[bool, int]
     |  
     |  nativeParentWidget(...)
     |      nativeParentWidget(self) -> QWidget
     |  
     |  nextInFocusChain(...)
     |      nextInFocusChain(self) -> QWidget
     |  
     |  normalGeometry(...)
     |      normalGeometry(self) -> QRect
     |  
     |  overrideWindowFlags(...)
     |      overrideWindowFlags(self, type: Union[Qt.WindowFlags, Qt.WindowType])
     |  
     |  overrideWindowState(...)
     |      overrideWindowState(self, state: Union[Qt.WindowStates, Qt.WindowState])
     |  
     |  paintEngine(...)
     |      paintEngine(self) -> QPaintEngine
     |  
     |  paintEvent(...)
     |      paintEvent(self, a0: QPaintEvent)
     |  
     |  palette(...)
     |      palette(self) -> QPalette
     |  
     |  parentWidget(...)
     |      parentWidget(self) -> QWidget
     |  
     |  pos(...)
     |      pos(self) -> QPoint
     |  
     |  previousInFocusChain(...)
     |      previousInFocusChain(self) -> QWidget
     |  
     |  raise_(...)
     |      raise_(self)
     |  
     |  rect(...)
     |      rect(self) -> QRect
     |  
     |  releaseKeyboard(...)
     |      releaseKeyboard(self)
     |  
     |  releaseMouse(...)
     |      releaseMouse(self)
     |  
     |  releaseShortcut(...)
     |      releaseShortcut(self, id: int)
     |  
     |  removeAction(...)
     |      removeAction(self, action: QAction)
     |  
     |  render(...)
     |      render(self, target: QPaintDevice, targetOffset: QPoint = QPoint(), sourceRegion: QRegion = QRegion(), flags: Union[QWidget.RenderFlags, QWidget.RenderFlag] = QWidget.RenderFlags(QWidget.RenderFlag.DrawWindowBackground|QWidget.RenderFlag.DrawChildren))
     |      render(self, painter: QPainter, targetOffset: QPoint = QPoint(), sourceRegion: QRegion = QRegion(), flags: Union[QWidget.RenderFlags, QWidget.RenderFlag] = QWidget.RenderFlags(QWidget.RenderFlag.DrawWindowBackground|QWidget.RenderFlag.DrawChildren))
     |  
     |  repaint(...)
     |      repaint(self)
     |      repaint(self, x: int, y: int, w: int, h: int)
     |      repaint(self, a0: QRect)
     |      repaint(self, a0: QRegion)
     |  
     |  resize(...)
     |      resize(self, a0: QSize)
     |      resize(self, w: int, h: int)
     |  
     |  restoreGeometry(...)
     |      restoreGeometry(self, geometry: Union[QByteArray, bytes, bytearray]) -> bool
     |  
     |  saveGeometry(...)
     |      saveGeometry(self) -> QByteArray
     |  
     |  screen(...)
     |      screen(self) -> QScreen
     |  
     |  scroll(...)
     |      scroll(self, dx: int, dy: int)
     |      scroll(self, dx: int, dy: int, a2: QRect)
     |  
     |  setAcceptDrops(...)
     |      setAcceptDrops(self, on: bool)
     |  
     |  setAccessibleDescription(...)
     |      setAccessibleDescription(self, description: str)
     |  
     |  setAccessibleName(...)
     |      setAccessibleName(self, name: str)
     |  
     |  setAttribute(...)
     |      setAttribute(self, attribute: Qt.WidgetAttribute, on: bool = True)
     |  
     |  setAutoFillBackground(...)
     |      setAutoFillBackground(self, enabled: bool)
     |  
     |  setBackgroundRole(...)
     |      setBackgroundRole(self, a0: QPalette.ColorRole)
     |  
     |  setBaseSize(...)
     |      setBaseSize(self, basew: int, baseh: int)
     |      setBaseSize(self, s: QSize)
     |  
     |  setContentsMargins(...)
     |      setContentsMargins(self, left: int, top: int, right: int, bottom: int)
     |      setContentsMargins(self, margins: QMargins)
     |  
     |  setContextMenuPolicy(...)
     |      setContextMenuPolicy(self, policy: Qt.ContextMenuPolicy)
     |  
     |  setCursor(...)
     |      setCursor(self, a0: Union[QCursor, Qt.CursorShape])
     |  
     |  setDisabled(...)
     |      setDisabled(self, a0: bool)
     |  
     |  setEnabled(...)
     |      setEnabled(self, a0: bool)
     |  
     |  setFixedHeight(...)
     |      setFixedHeight(self, h: int)
     |  
     |  setFixedSize(...)
     |      setFixedSize(self, a0: QSize)
     |      setFixedSize(self, w: int, h: int)
     |  
     |  setFixedWidth(...)
     |      setFixedWidth(self, w: int)
     |  
     |  setFocus(...)
     |      setFocus(self)
     |      setFocus(self, reason: Qt.FocusReason)
     |  
     |  setFocusPolicy(...)
     |      setFocusPolicy(self, policy: Qt.FocusPolicy)
     |  
     |  setFocusProxy(...)
     |      setFocusProxy(self, a0: QWidget)
     |  
     |  setFont(...)
     |      setFont(self, a0: QFont)
     |  
     |  setForegroundRole(...)
     |      setForegroundRole(self, a0: QPalette.ColorRole)
     |  
     |  setGeometry(...)
     |      setGeometry(self, a0: QRect)
     |      setGeometry(self, ax: int, ay: int, aw: int, ah: int)
     |  
     |  setGraphicsEffect(...)
     |      setGraphicsEffect(self, effect: QGraphicsEffect)
     |  
     |  setHidden(...)
     |      setHidden(self, hidden: bool)
     |  
     |  setInputMethodHints(...)
     |      setInputMethodHints(self, hints: Union[Qt.InputMethodHints, Qt.InputMethodHint])
     |  
     |  setLayout(...)
     |      setLayout(self, a0: QLayout)
     |  
     |  setLayoutDirection(...)
     |      setLayoutDirection(self, direction: Qt.LayoutDirection)
     |  
     |  setLocale(...)
     |      setLocale(self, locale: QLocale)
     |  
     |  setMask(...)
     |      setMask(self, a0: QBitmap)
     |      setMask(self, a0: QRegion)
     |  
     |  setMaximumHeight(...)
     |      setMaximumHeight(self, maxh: int)
     |  
     |  setMaximumSize(...)
     |      setMaximumSize(self, maxw: int, maxh: int)
     |      setMaximumSize(self, s: QSize)
     |  
     |  setMaximumWidth(...)
     |      setMaximumWidth(self, maxw: int)
     |  
     |  setMinimumHeight(...)
     |      setMinimumHeight(self, minh: int)
     |  
     |  setMinimumSize(...)
     |      setMinimumSize(self, minw: int, minh: int)
     |      setMinimumSize(self, s: QSize)
     |  
     |  setMinimumWidth(...)
     |      setMinimumWidth(self, minw: int)
     |  
     |  setMouseTracking(...)
     |      setMouseTracking(self, enable: bool)
     |  
     |  setPalette(...)
     |      setPalette(self, a0: QPalette)
     |  
     |  setParent(...)
     |      setParent(self, parent: QWidget)
     |      setParent(self, parent: QWidget, f: Union[Qt.WindowFlags, Qt.WindowType])
     |  
     |  setShortcutAutoRepeat(...)
     |      setShortcutAutoRepeat(self, id: int, enabled: bool = True)
     |  
     |  setShortcutEnabled(...)
     |      setShortcutEnabled(self, id: int, enabled: bool = True)
     |  
     |  setSizeIncrement(...)
     |      setSizeIncrement(self, w: int, h: int)
     |      setSizeIncrement(self, s: QSize)
     |  
     |  setSizePolicy(...)
     |      setSizePolicy(self, a0: QSizePolicy)
     |      setSizePolicy(self, hor: QSizePolicy.Policy, ver: QSizePolicy.Policy)
     |  
     |  setStatusTip(...)
     |      setStatusTip(self, a0: str)
     |  
     |  setStyle(...)
     |      setStyle(self, a0: QStyle)
     |  
     |  setStyleSheet(...)
     |      setStyleSheet(self, styleSheet: str)
     |  
     |  setTabOrder(...)
     |      setTabOrder(a0: QWidget, a1: QWidget)
     |  
     |  setTabletTracking(...)
     |      setTabletTracking(self, enable: bool)
     |  
     |  setToolTip(...)
     |      setToolTip(self, a0: str)
     |  
     |  setToolTipDuration(...)
     |      setToolTipDuration(self, msec: int)
     |  
     |  setUpdatesEnabled(...)
     |      setUpdatesEnabled(self, enable: bool)
     |  
     |  setWhatsThis(...)
     |      setWhatsThis(self, a0: str)
     |  
     |  setWindowFilePath(...)
     |      setWindowFilePath(self, filePath: str)
     |  
     |  setWindowFlag(...)
     |      setWindowFlag(self, a0: Qt.WindowType, on: bool = True)
     |  
     |  setWindowFlags(...)
     |      setWindowFlags(self, type: Union[Qt.WindowFlags, Qt.WindowType])
     |  
     |  setWindowIcon(...)
     |      setWindowIcon(self, icon: QIcon)
     |  
     |  setWindowIconText(...)
     |      setWindowIconText(self, a0: str)
     |  
     |  setWindowModality(...)
     |      setWindowModality(self, windowModality: Qt.WindowModality)
     |  
     |  setWindowModified(...)
     |      setWindowModified(self, a0: bool)
     |  
     |  setWindowOpacity(...)
     |      setWindowOpacity(self, level: float)
     |  
     |  setWindowRole(...)
     |      setWindowRole(self, a0: str)
     |  
     |  setWindowState(...)
     |      setWindowState(self, state: Union[Qt.WindowStates, Qt.WindowState])
     |  
     |  setWindowTitle(...)
     |      setWindowTitle(self, a0: str)
     |  
     |  sharedPainter(...)
     |      sharedPainter(self) -> QPainter
     |  
     |  show(...)
     |      show(self)
     |  
     |  showFullScreen(...)
     |      showFullScreen(self)
     |  
     |  showMaximized(...)
     |      showMaximized(self)
     |  
     |  showMinimized(...)
     |      showMinimized(self)
     |  
     |  showNormal(...)
     |      showNormal(self)
     |  
     |  size(...)
     |      size(self) -> QSize
     |  
     |  sizeIncrement(...)
     |      sizeIncrement(self) -> QSize
     |  
     |  sizePolicy(...)
     |      sizePolicy(self) -> QSizePolicy
     |  
     |  stackUnder(...)
     |      stackUnder(self, a0: QWidget)
     |  
     |  statusTip(...)
     |      statusTip(self) -> str
     |  
     |  style(...)
     |      style(self) -> QStyle
     |  
     |  styleSheet(...)
     |      styleSheet(self) -> str
     |  
     |  tabletEvent(...)
     |      tabletEvent(self, a0: QTabletEvent)
     |  
     |  testAttribute(...)
     |      testAttribute(self, attribute: Qt.WidgetAttribute) -> bool
     |  
     |  toolTip(...)
     |      toolTip(self) -> str
     |  
     |  toolTipDuration(...)
     |      toolTipDuration(self) -> int
     |  
     |  underMouse(...)
     |      underMouse(self) -> bool
     |  
     |  ungrabGesture(...)
     |      ungrabGesture(self, type: Qt.GestureType)
     |  
     |  unsetCursor(...)
     |      unsetCursor(self)
     |  
     |  unsetLayoutDirection(...)
     |      unsetLayoutDirection(self)
     |  
     |  unsetLocale(...)
     |      unsetLocale(self)
     |  
     |  update(...)
     |      update(self)
     |      update(self, a0: QRect)
     |      update(self, a0: QRegion)
     |      update(self, ax: int, ay: int, aw: int, ah: int)
     |  
     |  updateGeometry(...)
     |      updateGeometry(self)
     |  
     |  updateMicroFocus(...)
     |      updateMicroFocus(self)
     |  
     |  updatesEnabled(...)
     |      updatesEnabled(self) -> bool
     |  
     |  visibleRegion(...)
     |      visibleRegion(self) -> QRegion
     |  
     |  whatsThis(...)
     |      whatsThis(self) -> str
     |  
     |  wheelEvent(...)
     |      wheelEvent(self, a0: QWheelEvent)
     |  
     |  width(...)
     |      width(self) -> int
     |  
     |  winId(...)
     |      winId(self) -> PyQt5.sip.voidptr
     |  
     |  window(...)
     |      window(self) -> QWidget
     |  
     |  windowFilePath(...)
     |      windowFilePath(self) -> str
     |  
     |  windowFlags(...)
     |      windowFlags(self) -> Qt.WindowFlags
     |  
     |  windowHandle(...)
     |      windowHandle(self) -> QWindow
     |  
     |  windowIcon(...)
     |      windowIcon(self) -> QIcon
     |  
     |  windowIconChanged = <unbound PYQT_SIGNAL windowIconChanged(QIcon)>
     |  windowIconText(...)
     |      windowIconText(self) -> str
     |  
     |  windowIconTextChanged = <unbound PYQT_SIGNAL windowIconTextChanged(QString)>
     |  windowModality(...)
     |      windowModality(self) -> Qt.WindowModality
     |  
     |  windowOpacity(...)
     |      windowOpacity(self) -> float
     |  
     |  windowRole(...)
     |      windowRole(self) -> str
     |  
     |  windowState(...)
     |      windowState(self) -> Qt.WindowStates
     |  
     |  windowTitle(...)
     |      windowTitle(self) -> str
     |  
     |  windowTitleChanged = <unbound PYQT_SIGNAL windowTitleChanged(QString)>
     |  windowType(...)
     |      windowType(self) -> Qt.WindowType
     |  
     |  x(...)
     |      x(self) -> int
     |  
     |  y(...)
     |      y(self) -> int
     |  
     |  ----------------------------------------------------------------------
     |  Data and other attributes inherited from PyQt5.QtWidgets.QWidget:
     |  
     |  DrawChildren = 2
     |  
     |  DrawWindowBackground = 1
     |  
     |  IgnoreMask = 4
     |  
     |  RenderFlag = <class 'PyQt5.QtWidgets.QWidget.RenderFlag'>
     |  
     |  RenderFlags = <class 'PyQt5.QtWidgets.QWidget.RenderFlags'>
     |      QWidget.RenderFlags()
     |      QWidget.RenderFlags(f: Union[QWidget.RenderFlags, QWidget.RenderFlag])
     |      QWidget.RenderFlags(a0: QWidget.RenderFlags)
     |  
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from PyQt5.QtCore.QObject:
     |  
     |  __getattr__(...)
     |      __getattr__(self, name: str) -> object
     |  
     |  blockSignals(...)
     |      blockSignals(self, b: bool) -> bool
     |  
     |  childEvent(...)
     |      childEvent(self, a0: QChildEvent)
     |  
     |  children(...)
     |      children(self) -> List[QObject]
     |  
     |  connectNotify(...)
     |      connectNotify(self, signal: QMetaMethod)
     |  
     |  customEvent(...)
     |      customEvent(self, a0: QEvent)
     |  
     |  deleteLater(...)
     |      deleteLater(self)
     |  
     |  destroyed = <unbound PYQT_SIGNAL destroyed(QObject*)>
     |  disconnect(...)
     |      disconnect(a0: QMetaObject.Connection) -> bool
     |      disconnect(self)
     |  
     |  disconnectNotify(...)
     |      disconnectNotify(self, signal: QMetaMethod)
     |  
     |  dumpObjectInfo(...)
     |      dumpObjectInfo(self)
     |  
     |  dumpObjectTree(...)
     |      dumpObjectTree(self)
     |  
     |  dynamicPropertyNames(...)
     |      dynamicPropertyNames(self) -> List[QByteArray]
     |  
     |  findChild(...)
     |      findChild(self, type: type, name: str = '', options: Union[Qt.FindChildOptions, Qt.FindChildOption] = Qt.FindChildrenRecursively) -> QObject
     |      findChild(self, types: Tuple, name: str = '', options: Union[Qt.FindChildOptions, Qt.FindChildOption] = Qt.FindChildrenRecursively) -> QObject
     |  
     |  findChildren(...)
     |      findChildren(self, type: type, name: str = '', options: Union[Qt.FindChildOptions, Qt.FindChildOption] = Qt.FindChildrenRecursively) -> List[QObject]
     |      findChildren(self, types: Tuple, name: str = '', options: Union[Qt.FindChildOptions, Qt.FindChildOption] = Qt.FindChildrenRecursively) -> List[QObject]
     |      findChildren(self, type: type, regExp: QRegExp, options: Union[Qt.FindChildOptions, Qt.FindChildOption] = Qt.FindChildrenRecursively) -> List[QObject]
     |      findChildren(self, types: Tuple, regExp: QRegExp, options: Union[Qt.FindChildOptions, Qt.FindChildOption] = Qt.FindChildrenRecursively) -> List[QObject]
     |      findChildren(self, type: type, re: QRegularExpression, options: Union[Qt.FindChildOptions, Qt.FindChildOption] = Qt.FindChildrenRecursively) -> List[QObject]
     |      findChildren(self, types: Tuple, re: QRegularExpression, options: Union[Qt.FindChildOptions, Qt.FindChildOption] = Qt.FindChildrenRecursively) -> List[QObject]
     |  
     |  inherits(...)
     |      inherits(self, classname: str) -> bool
     |  
     |  installEventFilter(...)
     |      installEventFilter(self, a0: QObject)
     |  
     |  isSignalConnected(...)
     |      isSignalConnected(self, signal: QMetaMethod) -> bool
     |  
     |  isWidgetType(...)
     |      isWidgetType(self) -> bool
     |  
     |  isWindowType(...)
     |      isWindowType(self) -> bool
     |  
     |  killTimer(...)
     |      killTimer(self, id: int)
     |  
     |  metaObject(...)
     |      metaObject(self) -> QMetaObject
     |  
     |  moveToThread(...)
     |      moveToThread(self, thread: QThread)
     |  
     |  objectName(...)
     |      objectName(self) -> str
     |  
     |  objectNameChanged = <unbound PYQT_SIGNAL objectNameChanged(QString)>
     |  parent(...)
     |      parent(self) -> QObject
     |  
     |  property(...)
     |      property(self, name: str) -> Any
     |  
     |  pyqtConfigure(...)
     |      QObject.pyqtConfigure(...)
     |      
     |      Each keyword argument is either the name of a Qt property or a Qt signal.
     |      For properties the property is set to the given value which should be of an
     |      appropriate type.
     |      For signals the signal is connected to the given value which should be a
     |      callable.
     |  
     |  receivers(...)
     |      receivers(self, signal: PYQT_SIGNAL) -> int
     |  
     |  removeEventFilter(...)
     |      removeEventFilter(self, a0: QObject)
     |  
     |  sender(...)
     |      sender(self) -> QObject
     |  
     |  senderSignalIndex(...)
     |      senderSignalIndex(self) -> int
     |  
     |  setObjectName(...)
     |      setObjectName(self, name: str)
     |  
     |  setProperty(...)
     |      setProperty(self, name: str, value: Any) -> bool
     |  
     |  signalsBlocked(...)
     |      signalsBlocked(self) -> bool
     |  
     |  startTimer(...)
     |      startTimer(self, interval: int, timerType: Qt.TimerType = Qt.CoarseTimer) -> int
     |  
     |  thread(...)
     |      thread(self) -> QThread
     |  
     |  timerEvent(...)
     |      timerEvent(self, a0: QTimerEvent)
     |  
     |  tr(...)
     |      tr(self, sourceText: str, disambiguation: typing.Optional[str] = None, n: int = -1) -> str
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from PyQt5.QtCore.QObject:
     |  
     |  __weakref__
     |      list of weak references to the object (if defined)
     |  
     |  ----------------------------------------------------------------------
     |  Data and other attributes inherited from PyQt5.QtCore.QObject:
     |  
     |  staticMetaObject = <PyQt5.QtCore.QMetaObject object>
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from PyQt5.QtGui.QPaintDevice:
     |  
     |  colorCount(...)
     |      colorCount(self) -> int
     |  
     |  depth(...)
     |      depth(self) -> int
     |  
     |  devicePixelRatio(...)
     |      devicePixelRatio(self) -> int
     |  
     |  devicePixelRatioF(...)
     |      devicePixelRatioF(self) -> float
     |  
     |  devicePixelRatioFScale(...)
     |      devicePixelRatioFScale() -> float
     |  
     |  heightMM(...)
     |      heightMM(self) -> int
     |  
     |  logicalDpiX(...)
     |      logicalDpiX(self) -> int
     |  
     |  logicalDpiY(...)
     |      logicalDpiY(self) -> int
     |  
     |  paintingActive(...)
     |      paintingActive(self) -> bool
     |  
     |  physicalDpiX(...)
     |      physicalDpiX(self) -> int
     |  
     |  physicalDpiY(...)
     |      physicalDpiY(self) -> int
     |  
     |  widthMM(...)
     |      widthMM(self) -> int
     |  
     |  ----------------------------------------------------------------------
     |  Data and other attributes inherited from PyQt5.QtGui.QPaintDevice:
     |  
     |  PaintDeviceMetric = <class 'PyQt5.QtGui.QPaintDevice.PaintDeviceMetric...
     |  
     |  PdmDepth = 6
     |  
     |  PdmDevicePixelRatio = 11
     |  
     |  PdmDevicePixelRatioScaled = 12
     |  
     |  PdmDpiX = 7
     |  
     |  PdmDpiY = 8
     |  
     |  PdmHeight = 2
     |  
     |  PdmHeightMM = 4
     |  
     |  PdmNumColors = 5
     |  
     |  PdmPhysicalDpiX = 9
     |  
     |  PdmPhysicalDpiY = 10
     |  
     |  PdmWidth = 1
     |  
     |  PdmWidthMM = 3
     |  
     |  ----------------------------------------------------------------------
     |  Static methods inherited from sip.simplewrapper:
     |  
     |  __new__(*args, **kwargs) from sip.wrappertype
     |      Create and return a new object.  See help(type) for accurate signature.
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from sip.simplewrapper:
     |  
     |  __dict__
    
    class PythinuxError(builtins.Exception)
     |  PythinuxError(text)
     |  
     |  Exception thrown by the kernel when an issue occurs.
     |  
     |  Method resolution order:
     |      PythinuxError
     |      builtins.Exception
     |      builtins.BaseException
     |      builtins.object
     |  
     |  Methods defined here:
     |  
     |  __init__(self, text)
     |      Initialize self.  See help(type(self)) for accurate signature.
     |  
     |  __str__(self)
     |      Return str(self).
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors defined here:
     |  
     |  __weakref__
     |      list of weak references to the object (if defined)
     |  
     |  ----------------------------------------------------------------------
     |  Static methods inherited from builtins.Exception:
     |  
     |  __new__(*args, **kwargs) from builtins.type
     |      Create and return a new object.  See help(type) for accurate signature.
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from builtins.BaseException:
     |  
     |  __delattr__(self, name, /)
     |      Implement delattr(self, name).
     |  
     |  __getattribute__(self, name, /)
     |      Return getattr(self, name).
     |  
     |  __reduce__(...)
     |      Helper for pickle.
     |  
     |  __repr__(self, /)
     |      Return repr(self).
     |  
     |  __setattr__(self, name, value, /)
     |      Implement setattr(self, name, value).
     |  
     |  __setstate__(...)
     |  
     |  add_note(...)
     |      Exception.add_note(note) --
     |      add a note to the exception
     |  
     |  with_traceback(...)
     |      Exception.with_traceback(tb) --
     |      set self.__traceback__ to tb and return self.
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from builtins.BaseException:
     |  
     |  __cause__
     |      exception cause
     |  
     |  __context__
     |      exception context
     |  
     |  __dict__
     |  
     |  __suppress_context__
     |  
     |  __traceback__
     |  
     |  args
    
    class SudoError(builtins.Exception)
     |  Generic exception for issues with sudo priveleges.
     |  
     |  Method resolution order:
     |      SudoError
     |      builtins.Exception
     |      builtins.BaseException
     |      builtins.object
     |  
     |  Methods defined here:
     |  
     |  __str__(self)
     |      Return str(self).
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors defined here:
     |  
     |  __weakref__
     |      list of weak references to the object (if defined)
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from builtins.Exception:
     |  
     |  __init__(self, /, *args, **kwargs)
     |      Initialize self.  See help(type(self)) for accurate signature.
     |  
     |  ----------------------------------------------------------------------
     |  Static methods inherited from builtins.Exception:
     |  
     |  __new__(*args, **kwargs) from builtins.type
     |      Create and return a new object.  See help(type) for accurate signature.
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from builtins.BaseException:
     |  
     |  __delattr__(self, name, /)
     |      Implement delattr(self, name).
     |  
     |  __getattribute__(self, name, /)
     |      Return getattr(self, name).
     |  
     |  __reduce__(...)
     |      Helper for pickle.
     |  
     |  __repr__(self, /)
     |      Return repr(self).
     |  
     |  __setattr__(self, name, value, /)
     |      Implement setattr(self, name, value).
     |  
     |  __setstate__(...)
     |  
     |  add_note(...)
     |      Exception.add_note(note) --
     |      add a note to the exception
     |  
     |  with_traceback(...)
     |      Exception.with_traceback(tb) --
     |      set self.__traceback__ to tb and return self.
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from builtins.BaseException:
     |  
     |  __cause__
     |      exception cause
     |  
     |  __context__
     |      exception context
     |  
     |  __dict__
     |  
     |  __suppress_context__
     |  
     |  __traceback__
     |  
     |  args
    
    class User(Base)
     |  User(group, username, password='7aa1a9dbdfe2a561c013db299695ca05c4b353ff691c31b77565320f979ece796b97dd07c8938ef32cfeb87ca524f55d', hidden=False)
     |  
     |  User class used by Pythinux.
     |  See __init__() for how to create User objects properly.
     |  
     |  Method resolution order:
     |      User
     |      Base
     |      builtins.object
     |  
     |  Methods defined here:
     |  
     |  USERTYPE(self)
     |      Returns the name of the user's group.
     |  
     |  __init__(self, group, username, password='7aa1a9dbdfe2a561c013db299695ca05c4b353ff691c31b77565320f979ece796b97dd07c8938ef32cfeb87ca524f55d', hidden=False)
     |      Constructor for User class.
     |      Args:
     |          group: a Group object.
     |          username: string, the username for the user.
     |          password: string passed through hashString() (Note: you MUST
     |          pass it through hashString().
     |              If no password is given, the password is blank.
     |              (the hash obviously still exists. pydoc represents the
     |              output of hashString("") as the default password.)
     |  
     |  admin(self)
     |      Returns whether or not the user's level is 2 or higher,
     |      indicating a root user.
     |  
     |  check(self, username, password='b68b89be28423d8938f7ac0c72ed3698fb1286bf3e9751203b94ffa97c208a3e79b5980dfc571f9880ecb623f83af108')
     |      Function for checking whether a User class and passed details match.
     |      Args:
     |          username: string
     |          password: string
     |      Returns:
     |          bool depending on whether or not the supplied details match up
     |          with the User object's properties.
     |  
     |  god(self)
     |      Returns whether or not the user's level is 3 or higher,
     |      indicating a god user.
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors defined here:
     |  
     |  __dict__
     |      dictionary for instance variables (if defined)
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from Base:
     |  
     |  __iter__(self)
     |      Iterating through a Base object iterates through the keys and not the
     |      values.
     |  
     |  __len__(self)
     |      Runing len() for a Base object returns the amount of attributes it has.
     |  
     |  __str__(self)
     |      Printing an object will return the object passed
     |      through pprint_dict(obj_to_dict()).
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from Base:
     |  
     |  __weakref__
     |      list of weak references to the object (if defined)
    
    class UserList(Base)
     |  Method resolution order:
     |      UserList
     |      Base
     |      builtins.object
     |  
     |  Methods defined here:
     |  
     |  __init__(self)
     |      Initialize self.  See help(type(self)) for accurate signature.
     |  
     |  __len__(self)
     |      Runing len() for a Base object returns the amount of attributes it has.
     |  
     |  add(self, user)
     |      Adds a user to the user list.
     |  
     |  byName(self, name)
     |      Returns the first instance of
     |      a user in the userlist with the same name.
     |  
     |  list(self)
     |  
     |  remove(self, user)
     |  
     |  removeByName(self, name)
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors defined here:
     |  
     |  __dict__
     |      dictionary for instance variables (if defined)
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from Base:
     |  
     |  __iter__(self)
     |      Iterating through a Base object iterates through the keys and not the
     |      values.
     |  
     |  __str__(self)
     |      Printing an object will return the object passed
     |      through pprint_dict(obj_to_dict()).
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from Base:
     |  
     |  __weakref__
     |      list of weak references to the object (if defined)
    
    class rangedInt(builtins.object)
     |  rangedInt(value, min_value, max_value)
     |  
     |  A floating point number with a specified range
     |  that gets automatically adhered to.
     |  Currently unused, but will be used soon.
     |  
     |  Methods defined here:
     |  
     |  __add__(self, other)
     |  
     |  __init__(self, value, min_value, max_value)
     |      Initialize self.  See help(type(self)) for accurate signature.
     |  
     |  __mul__(self, other)
     |  
     |  __radd__(self, other)
     |  
     |  __rmul__(self, other)
     |  
     |  __rsub__(self, other)
     |  
     |  __rtruediv__(self, other)
     |  
     |  __str__(self)
     |      Return str(self).
     |  
     |  __sub__(self, other)
     |  
     |  __truediv__(self, other)
     |  
     |  get(self)
     |  
     |  set(self, value)
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors defined here:
     |  
     |  __dict__
     |      dictionary for instance variables (if defined)
     |  
     |  __weakref__
     |      list of weak references to the object (if defined)

FUNCTIONS
    CompileOS()
    
    addPythinuxModule(module, shared_objects, user)
        Adds the Pythinux module to a module.
        Internal function only, please ignore.
    
    attachDebugger(globals)
    
    br()
        Displays a "Press ENTER To continue" screen when called.
    
    castObject(obj, new_type)
        Create a new object of a specified type or use an existing object,
        copying all attributes (excluding methods) of the
        original object to the new one.
        
        Args:
            obj: The original object to cast
            cast_type: The type or object to cast the original object to.
            If `cast_type` is a type, a new object of that type is created.
            If `cast_type` is an object, the original object is
            copied to that object.
        
        Returns:
            A new object of the specified type, with all attributes
            (excluding methods) of the original object copied over.
            If `cast_type` is an object, the original object is copied to
            that object and returned.
    
    clearTemp()
        Clears the contents of the tmp/ directory in the
        Pythinux install directory.
    
    cls()
        Old function. Used to clear the terminal.
        Now that the terminal is no longer used (just emulated),
        it is blocked from running.
    
    copy(obj)
        See python's copy.deepcopy(). It's the same thing.
    
    createModule(moduleName)
        Creates a module object, which not normally creatable.
    
    createService(command, user)
        Creates a service that can be passed to startService().
        Args:
            command: command to be executed.
            user: user that executes the command.
    
    createUser(userlist, user)
        Adds a User to a userlist.
        Args:
            userlist: a userlist object (loaded from loadUserList())
            user: a User instance.
        Returns:
            userlist: a userlist that can be passed to saveUserList().
    
    deserialiseFromDict(dct)
        Custom JSON deserializer for handling class instances and methods.
    
    div()
        Prints 20 hyphen/dash symbols.
    
    div2()
        Returns 20 hyphen/dash symbols as a string.
    
    doCalc(text)
        A fully safe (but very restricted) version of eval().
        Undergoes HEAVY sanitisation before execution.
    
    doNothing(obj)
        Returns obj.
        Used to prevent linter programs from complaining about "unused" programs.
    
    exposeAllVar(module)
        This function is unused.
        Adds the contents of globals() to a module.
    
    exposeObjects(module, objects)
        Internal function that adds a dictionary containing objects to a module.
        The dictionary is in the format {name:object}.
        Returns the module with the objects exposed.
    
    fixDirectories(returnMode=False)
        Reconstructs the blank directories if they do not exist,
        because git doesn't count directories as files.
    
    giveOutput(command, user, split=False, shell='terminal')
           Returns the output of a command.
           Positional arguments:
               (str) command: the command to execute
               (User) user: the user executing the command. Pass currentUser.
               (bool) split: if true, returns it split into a list with 
        as a
               separator.
               (str) shell: Passed to main().
    
    giveVars()
        Returns the list of variables loaded by the program.
    
    hashString(plaintext, salt=None)
        Hashing algorithm used by Pythinux.
        Args:
            plaintext: a string.
            salt: an optional salt, usually a bytes-like object. If none is
            provided, a random one is generated.
        Returns:
            salted_hash: The final hash. The last 16 characters is the salt,
            required to verify the hash.
        The verifyHash function is used to authenticate hashes.
    
    init(user)
    
    joinIterable(string, iterable)
        Joins a string and an iterable together.
        Args:
        string: The initial string to join to
        iterable: an iterable object to join
        Returns:
        string + every item in iterable
    
    list_loadable_programs(user, sudoMode=False)
        Returns a list of all commands that the user is authorised to load.
        Note: if sudoMode is True, the app and system
        directories are always authorised.
    
    loadAL()
        Returns the autologin username as a string, or None of there isn't one set.
    
    loadAliases()
        Returns the list of aliases, or {} if there isn't one.
    
    loadGroupList()
    
    loadProgramBase(program_name_with_args, user, sudoMode=False, shell='terminal', __name__=None, isolatedMode=False)
    
    loadUserList()
        Handles loading the userlist from the file system.
        Returns the userlist when called.
    
    load_program(program_name_with_args, user, sudoMode=False, shell='terminal', debugMode=False, baseMode=False, __name__=None, isolatedMode=False)
    
    logEvent(text, log='base_log')
        Creates or appends to a log.
        Arguments:
            (str) text: the text that gets logged.
            (str) log: the name of the log file. Default is "base_log".
    
    loginScreen(username=None)
        Login screen.
        Args:
            (optional) (str) username: the username passed to the login screen.
            Passing this will launch the Unlock Screen screen.
            (optional) (str) password: the password passed to the login screen.
            Passing both the username and password bypasses the input.
        Once you enter your details, init() is called.
    
    main(user, prompt, sudoMode=False, shell='terminal', doNotExecute=False)
    
    makeDir()
        Don't remember what this one does. Internal function. Ignore.
    
    makeDirDict()
        Returns a dictionary containing
        every single item in dir() in the format {itemname:item}.
        Mostly unused.
    
    maxEscape()
        Internal function.
    
    mergeDict(a, b)
        Merges a with b.
        Args:
            a: dictionary. Main dictionary.
            b: dictionary.
        Returns:
            a with the contents of b appended to it.
    
    obj_to_dict(obj, addItemType=True)
        Recursively convert an object and all its attributes to a dictionary.
    
    parseInput(user, string, shell)
        Function for parsing aliases. Internal only.
    
    pprint(obj)
        Prints an object's attributes as a formatted dictionary.
    
    pprint_dict(dic)
        Takes a dictionary and returns it as a string with indentation
    
    qDrawBorderPixmap(...)
        qDrawBorderPixmap(painter: QPainter, target: QRect, margins: QMargins, pixmap: QPixmap)
    
    qDrawPlainRect(...)
        qDrawPlainRect(p: QPainter, x: int, y: int, w: int, h: int, a5: Union[QColor, Qt.GlobalColor], lineWidth: int = 1, fill: typing.Optional[Union[QBrush, QColor, Qt.GlobalColor, QGradient]] = None)
        qDrawPlainRect(p: QPainter, r: QRect, a2: Union[QColor, Qt.GlobalColor, QGradient], lineWidth: int = 1, fill: typing.Optional[Union[QBrush, QColor, Qt.GlobalColor, QGradient]] = None)
    
    qDrawShadeLine(...)
        qDrawShadeLine(p: QPainter, x1: int, y1: int, x2: int, y2: int, pal: QPalette, sunken: bool = True, lineWidth: int = 1, midLineWidth: int = 0)
        qDrawShadeLine(p: QPainter, p1: QPoint, p2: QPoint, pal: QPalette, sunken: bool = True, lineWidth: int = 1, midLineWidth: int = 0)
    
    qDrawShadePanel(...)
        qDrawShadePanel(p: QPainter, x: int, y: int, w: int, h: int, pal: QPalette, sunken: bool = False, lineWidth: int = 1, fill: typing.Optional[Union[QBrush, QColor, Qt.GlobalColor, QGradient]] = None)
        qDrawShadePanel(p: QPainter, r: QRect, pal: QPalette, sunken: bool = False, lineWidth: int = 1, fill: typing.Optional[Union[QBrush, QColor, Qt.GlobalColor, QGradient]] = None)
    
    qDrawShadeRect(...)
        qDrawShadeRect(p: QPainter, x: int, y: int, w: int, h: int, pal: QPalette, sunken: bool = False, lineWidth: int = 1, midLineWidth: int = 0, fill: typing.Optional[Union[QBrush, QColor, Qt.GlobalColor, QGradient]] = None)
        qDrawShadeRect(p: QPainter, r: QRect, pal: QPalette, sunken: bool = False, lineWidth: int = 1, midLineWidth: int = 0, fill: typing.Optional[Union[QBrush, QColor, Qt.GlobalColor, QGradient]] = None)
    
    qDrawWinButton(...)
        qDrawWinButton(p: QPainter, x: int, y: int, w: int, h: int, pal: QPalette, sunken: bool = False, fill: typing.Optional[Union[QBrush, QColor, Qt.GlobalColor, QGradient]] = None)
        qDrawWinButton(p: QPainter, r: QRect, pal: QPalette, sunken: bool = False, fill: typing.Optional[Union[QBrush, QColor, Qt.GlobalColor, QGradient]] = None)
    
    qDrawWinPanel(...)
        qDrawWinPanel(p: QPainter, x: int, y: int, w: int, h: int, pal: QPalette, sunken: bool = False, fill: typing.Optional[Union[QBrush, QColor, Qt.GlobalColor, QGradient]] = None)
        qDrawWinPanel(p: QPainter, r: QRect, pal: QPalette, sunken: bool = False, fill: typing.Optional[Union[QBrush, QColor, Qt.GlobalColor, QGradient]] = None)
    
    removeUser(userlist, user)
        Removes a user from the userlist.
        Args:
            userlist: a userlist object (loaded from loadUserList())
            user: a User instance.
        Returns:
            userlist: a userlist that can be passed to saveUserList().
    
    restart_script()
    
    run_script(f, user)
        Runs a script.
        Args:
            f: a file-type object to be read. Must be in 'r' mode.
            user: a User object, the actual user to execute the script.
    
    saveAL(username)
        Makes username the autologin username
        Autologin allows for only the password to be entered.
    
    saveAliases(aliases)
        Saves an alias list.
        Args:
            aliases: a list grabbed from loadAliases().
    
    saveGroupList(groupList)
    
    saveUserList(userList)
        Saves a userlist to the file system.
        userlist: a userlist (returned by loadUserlist()).
    
    serialiseToDict(obj)
        Custom JSON serializer for handling class instances and methods.
    
    setVars(var)
        Unused.
    
    setupWizard()
    
    setupWizardBase(username, password, autoLogin)
        Setup wizard.
        * Sets up a user account, complete with username,
          password, init script, etc.
        * Sets up autologin, depending on user choice.
    
    sha256(string, salt=None)
        Performs a SHA256 og a string.
        Arguments:
            (str) string: string to be parsed
            (bytes-like) salt: optional salt, should be output of os.urandom().
    
    silent(function)
        Runs some code without outputting anything to the terminal
        Args:
        function: a callable object.
    
    splitString(string)
        Used by main() for turning a string into a list of arguments.
    
    startService(thread, name)
        Starts a service.
        Args:
        thread: a service generated using createService()
        name: name of the service.
    
    sudo(user, maxAttempts=10, incorrectAttempts=0)
        Password authentication.
        Args:
            user: the user getting authenticated.
        Returns True if the user types their password,
        and False if they fail after 10 tries.
    
    sudoPrompt()
    
    verifyHash(plaintext, saltedHashString)
        Verifies a hash.
        Args:
            plaintext: the string to check against.
            saltedHashString: a hash generated using hashString()
        Returns a boolean depending on whether or not the two match.

DATA
    QWIDGETSIZE_MAX = 16777215
    aliases = {}
    cdir = '/home/winfan3672/Documents/GitHub/Pythinux/pythinux'
    groupList = <pythinux.GroupList object>
    osName = 'Pythinux'
    pdir = ['Base', 'CompileOS', 'CurrentProgram', 'FileError', 'Fuse', 'G...
    qApp = <PyQt5.QtWidgets.QApplication object>
    userList = <pythinux.UserList object>
    var = {}
    version = [3, 0, 0]
